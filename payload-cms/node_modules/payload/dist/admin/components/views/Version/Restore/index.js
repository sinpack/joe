"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _modal = require("@faceless-ui/modal");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _reacttoastify = require("react-toastify");
const _ = require("../../..");
const _getTranslation = require("../../../../../utilities/getTranslation");
const _api = require("../../../../api");
const _Config = require("../../../utilities/Config");
require("./index.scss");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'restore-version';
const modalSlug = 'restore-version';
const Restore = ({ className, collection, global, originalDocID, versionDate, versionID })=>{
    const { routes: { admin, api }, serverURL } = (0, _Config.useConfig)();
    const history = (0, _reactrouterdom.useHistory)();
    const { toggleModal } = (0, _modal.useModal)();
    const [processing, setProcessing] = (0, _react.useState)(false);
    const { i18n, t } = (0, _reacti18next.useTranslation)('version');
    let fetchURL = `${serverURL}${api}`;
    let redirectURL;
    let restoreMessage;
    if (collection) {
        fetchURL = `${fetchURL}/${collection.slug}/versions/${versionID}`;
        redirectURL = `${admin}/collections/${collection.slug}/${originalDocID}`;
        restoreMessage = t('aboutToRestore', {
            label: (0, _getTranslation.getTranslation)(collection.labels.singular, i18n),
            versionDate
        });
    }
    if (global) {
        fetchURL = `${fetchURL}/globals/${global.slug}/versions/${versionID}`;
        redirectURL = `${admin}/globals/${global.slug}`;
        restoreMessage = t('aboutToRestoreGlobal', {
            label: (0, _getTranslation.getTranslation)(global.label, i18n),
            versionDate
        });
    }
    const handleRestore = (0, _react.useCallback)(async ()=>{
        setProcessing(true);
        const res = await _api.requests.post(fetchURL, {
            headers: {
                'Accept-Language': i18n.language
            }
        });
        if (res.status === 200) {
            const json = await res.json();
            _reacttoastify.toast.success(json.message);
            history.push(redirectURL, {
                refetchDocumentData: true
            });
        } else {
            _reacttoastify.toast.error(t('problemRestoringVersion'));
        }
    }, [
        fetchURL,
        history,
        redirectURL,
        t,
        i18n
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(_.Pill, {
        className: [
            baseClass,
            className
        ].filter(Boolean).join(' '),
        onClick: ()=>toggleModal(modalSlug)
    }, t('restoreThisVersion')), /*#__PURE__*/ _react.default.createElement(_modal.Modal, {
        className: `${baseClass}__modal`,
        slug: modalSlug
    }, /*#__PURE__*/ _react.default.createElement(_.MinimalTemplate, {
        className: `${baseClass}__modal-template`
    }, /*#__PURE__*/ _react.default.createElement("h1", null, t('confirmVersionRestoration')), /*#__PURE__*/ _react.default.createElement("p", null, restoreMessage), /*#__PURE__*/ _react.default.createElement(_.Button, {
        buttonStyle: "secondary",
        onClick: processing ? undefined : ()=>toggleModal(modalSlug),
        type: "button"
    }, t('general:cancel')), /*#__PURE__*/ _react.default.createElement(_.Button, {
        onClick: processing ? undefined : handleRestore
    }, processing ? t('restoring') : t('general:confirm')))));
};
const _default = Restore;

//# sourceMappingURL=data:application/json;base64,