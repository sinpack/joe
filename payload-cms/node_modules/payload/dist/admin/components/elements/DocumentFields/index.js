"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DocumentFields", {
    enumerable: true,
    get: function() {
        return DocumentFields;
    }
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _RenderFields = /*#__PURE__*/ _interop_require_default(require("../../forms/RenderFields"));
const _filterFields = require("../../forms/RenderFields/filterFields");
const _Gutter = require("../Gutter");
const _ViewDescription = /*#__PURE__*/ _interop_require_default(require("../ViewDescription"));
require("./index.scss");
const _OperationProvider = require("../../utilities/OperationProvider");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const baseClass = 'document-fields';
const DocumentFields = (props)=>{
    const { AfterFields, BeforeFields, description, fieldTypes, fields, forceSidebarWrap, hasSavePermission, permissions } = props;
    const operation = (0, _OperationProvider.useOperation)();
    const sidebarFields = (0, _filterFields.filterFields)({
        fieldSchema: fields,
        fieldTypes,
        filter: (field)=>field?.admin?.position === 'sidebar',
        permissions: permissions.fields,
        readOnly: !hasSavePermission,
        operation
    });
    const hasSidebarFields = sidebarFields && sidebarFields.length > 0;
    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            baseClass,
            hasSidebarFields ? `${baseClass}--has-sidebar` : `${baseClass}--no-sidebar`,
            forceSidebarWrap && `${baseClass}--force-sidebar-wrap`
        ].filter(Boolean).join(' ')
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__main`
    }, /*#__PURE__*/ _react.default.createElement(_Gutter.Gutter, {
        className: `${baseClass}__edit`
    }, /*#__PURE__*/ _react.default.createElement("header", {
        className: `${baseClass}__header`
    }, description && /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sub-header`
    }, /*#__PURE__*/ _react.default.createElement(_ViewDescription.default, {
        description: description
    }))), BeforeFields || null, /*#__PURE__*/ _react.default.createElement(_RenderFields.default, {
        className: `${baseClass}__fields`,
        fieldSchema: fields,
        fieldTypes: fieldTypes,
        filter: (field)=>!field.admin.position || field.admin.position && field.admin.position !== 'sidebar',
        permissions: permissions.fields,
        readOnly: !hasSavePermission
    }), AfterFields || null)), hasSidebarFields && /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar-wrap`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar-fields`
    }, /*#__PURE__*/ _react.default.createElement(_RenderFields.default, {
        fieldTypes: fieldTypes,
        fields: sidebarFields,
        permissions: permissions.fields,
        readOnly: !hasSavePermission
    }))))));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2VsZW1lbnRzL0RvY3VtZW50RmllbGRzL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB0eXBlIHsgQ29sbGVjdGlvblBlcm1pc3Npb24sIEdsb2JhbFBlcm1pc3Npb24gfSBmcm9tICcuLi8uLi8uLi8uLi9hdXRoJ1xuaW1wb3J0IHR5cGUgeyBGaWVsZFdpdGhQYXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vZmllbGRzL2NvbmZpZy90eXBlcydcbmltcG9ydCB0eXBlIHsgRGVzY3JpcHRpb24gfSBmcm9tICcuLi8uLi9mb3Jtcy9GaWVsZERlc2NyaXB0aW9uL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBGaWVsZFR5cGVzIH0gZnJvbSAnLi4vLi4vZm9ybXMvZmllbGQtdHlwZXMnXG5cbmltcG9ydCBSZW5kZXJGaWVsZHMgZnJvbSAnLi4vLi4vZm9ybXMvUmVuZGVyRmllbGRzJ1xuaW1wb3J0IHsgZmlsdGVyRmllbGRzIH0gZnJvbSAnLi4vLi4vZm9ybXMvUmVuZGVyRmllbGRzL2ZpbHRlckZpZWxkcydcbmltcG9ydCB7IEd1dHRlciB9IGZyb20gJy4uL0d1dHRlcidcbmltcG9ydCBWaWV3RGVzY3JpcHRpb24gZnJvbSAnLi4vVmlld0Rlc2NyaXB0aW9uJ1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5pbXBvcnQgeyB1c2VPcGVyYXRpb24gfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvT3BlcmF0aW9uUHJvdmlkZXInXG5cbmNvbnN0IGJhc2VDbGFzcyA9ICdkb2N1bWVudC1maWVsZHMnXG5cbmV4cG9ydCBjb25zdCBEb2N1bWVudEZpZWxkczogUmVhY3QuRkM8e1xuICBBZnRlckZpZWxkcz86IFJlYWN0LlJlYWN0Tm9kZVxuICBCZWZvcmVGaWVsZHM/OiBSZWFjdC5SZWFjdE5vZGVcbiAgZGVzY3JpcHRpb24/OiBEZXNjcmlwdGlvblxuICBmaWVsZFR5cGVzOiBGaWVsZFR5cGVzXG4gIGZpZWxkczogRmllbGRXaXRoUGF0aFtdXG4gIGZvcmNlU2lkZWJhcldyYXA/OiBib29sZWFuXG4gIGhhc1NhdmVQZXJtaXNzaW9uOiBib29sZWFuXG4gIHBlcm1pc3Npb25zOiBDb2xsZWN0aW9uUGVybWlzc2lvbiB8IEdsb2JhbFBlcm1pc3Npb25cbn0+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBBZnRlckZpZWxkcyxcbiAgICBCZWZvcmVGaWVsZHMsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZmllbGRUeXBlcyxcbiAgICBmaWVsZHMsXG4gICAgZm9yY2VTaWRlYmFyV3JhcCxcbiAgICBoYXNTYXZlUGVybWlzc2lvbixcbiAgICBwZXJtaXNzaW9ucyxcbiAgfSA9IHByb3BzXG5cbiAgY29uc3Qgb3BlcmF0aW9uID0gdXNlT3BlcmF0aW9uKClcblxuICBjb25zdCBzaWRlYmFyRmllbGRzID0gZmlsdGVyRmllbGRzKHtcbiAgICBmaWVsZFNjaGVtYTogZmllbGRzLFxuICAgIGZpZWxkVHlwZXMsXG4gICAgZmlsdGVyOiAoZmllbGQpID0+IGZpZWxkPy5hZG1pbj8ucG9zaXRpb24gPT09ICdzaWRlYmFyJyxcbiAgICBwZXJtaXNzaW9uczogcGVybWlzc2lvbnMuZmllbGRzLFxuICAgIHJlYWRPbmx5OiAhaGFzU2F2ZVBlcm1pc3Npb24sXG4gICAgb3BlcmF0aW9uLFxuICB9KVxuXG4gIGNvbnN0IGhhc1NpZGViYXJGaWVsZHMgPSBzaWRlYmFyRmllbGRzICYmIHNpZGViYXJGaWVsZHMubGVuZ3RoID4gMFxuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e1tcbiAgICAgICAgICBiYXNlQ2xhc3MsXG4gICAgICAgICAgaGFzU2lkZWJhckZpZWxkcyA/IGAke2Jhc2VDbGFzc30tLWhhcy1zaWRlYmFyYCA6IGAke2Jhc2VDbGFzc30tLW5vLXNpZGViYXJgLFxuICAgICAgICAgIGZvcmNlU2lkZWJhcldyYXAgJiYgYCR7YmFzZUNsYXNzfS0tZm9yY2Utc2lkZWJhci13cmFwYCxcbiAgICAgICAgXVxuICAgICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgICAuam9pbignICcpfVxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fbWFpbmB9PlxuICAgICAgICAgIDxHdXR0ZXIgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19lZGl0YH0+XG4gICAgICAgICAgICA8aGVhZGVyIGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9faGVhZGVyYH0+XG4gICAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3N1Yi1oZWFkZXJgfT5cbiAgICAgICAgICAgICAgICAgIDxWaWV3RGVzY3JpcHRpb24gZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICB7QmVmb3JlRmllbGRzIHx8IG51bGx9XG4gICAgICAgICAgICA8UmVuZGVyRmllbGRzXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fZmllbGRzYH1cbiAgICAgICAgICAgICAgZmllbGRTY2hlbWE9e2ZpZWxkc31cbiAgICAgICAgICAgICAgZmllbGRUeXBlcz17ZmllbGRUeXBlc31cbiAgICAgICAgICAgICAgZmlsdGVyPXsoZmllbGQpID0+XG4gICAgICAgICAgICAgICAgIWZpZWxkLmFkbWluLnBvc2l0aW9uIHx8XG4gICAgICAgICAgICAgICAgKGZpZWxkLmFkbWluLnBvc2l0aW9uICYmIGZpZWxkLmFkbWluLnBvc2l0aW9uICE9PSAnc2lkZWJhcicpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcGVybWlzc2lvbnM9e3Blcm1pc3Npb25zLmZpZWxkc31cbiAgICAgICAgICAgICAgcmVhZE9ubHk9eyFoYXNTYXZlUGVybWlzc2lvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7QWZ0ZXJGaWVsZHMgfHwgbnVsbH1cbiAgICAgICAgICA8L0d1dHRlcj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtoYXNTaWRlYmFyRmllbGRzICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fc2lkZWJhci13cmFwYH0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fc2lkZWJhcmB9PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fc2lkZWJhci1maWVsZHNgfT5cbiAgICAgICAgICAgICAgICA8UmVuZGVyRmllbGRzXG4gICAgICAgICAgICAgICAgICBmaWVsZFR5cGVzPXtmaWVsZFR5cGVzfVxuICAgICAgICAgICAgICAgICAgZmllbGRzPXtzaWRlYmFyRmllbGRzfVxuICAgICAgICAgICAgICAgICAgcGVybWlzc2lvbnM9e3Blcm1pc3Npb25zLmZpZWxkc31cbiAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXshaGFzU2F2ZVBlcm1pc3Npb259XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJEb2N1bWVudEZpZWxkcyIsImJhc2VDbGFzcyIsInByb3BzIiwiQWZ0ZXJGaWVsZHMiLCJCZWZvcmVGaWVsZHMiLCJkZXNjcmlwdGlvbiIsImZpZWxkVHlwZXMiLCJmaWVsZHMiLCJmb3JjZVNpZGViYXJXcmFwIiwiaGFzU2F2ZVBlcm1pc3Npb24iLCJwZXJtaXNzaW9ucyIsIm9wZXJhdGlvbiIsInVzZU9wZXJhdGlvbiIsInNpZGViYXJGaWVsZHMiLCJmaWx0ZXJGaWVsZHMiLCJmaWVsZFNjaGVtYSIsImZpbHRlciIsImZpZWxkIiwiYWRtaW4iLCJwb3NpdGlvbiIsInJlYWRPbmx5IiwiaGFzU2lkZWJhckZpZWxkcyIsImxlbmd0aCIsIlJlYWN0IiwiRnJhZ21lbnQiLCJkaXYiLCJjbGFzc05hbWUiLCJCb29sZWFuIiwiam9pbiIsIkd1dHRlciIsImhlYWRlciIsIlZpZXdEZXNjcmlwdGlvbiIsIlJlbmRlckZpZWxkcyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQWdCYUE7OztlQUFBQTs7OzhEQWhCSztxRUFPTzs4QkFDSTt3QkFDTjt3RUFDSztRQUNyQjttQ0FDc0I7Ozs7OztBQUU3QixNQUFNQyxZQUFZO0FBRVgsTUFBTUQsaUJBU1IsQ0FBQ0U7SUFDSixNQUFNLEVBQ0pDLFdBQVcsRUFDWEMsWUFBWSxFQUNaQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsTUFBTSxFQUNOQyxnQkFBZ0IsRUFDaEJDLGlCQUFpQixFQUNqQkMsV0FBVyxFQUNaLEdBQUdSO0lBRUosTUFBTVMsWUFBWUMsSUFBQUEsK0JBQVk7SUFFOUIsTUFBTUMsZ0JBQWdCQyxJQUFBQSwwQkFBWSxFQUFDO1FBQ2pDQyxhQUFhUjtRQUNiRDtRQUNBVSxRQUFRLENBQUNDLFFBQVVBLE9BQU9DLE9BQU9DLGFBQWE7UUFDOUNULGFBQWFBLFlBQVlILE1BQU07UUFDL0JhLFVBQVUsQ0FBQ1g7UUFDWEU7SUFDRjtJQUVBLE1BQU1VLG1CQUFtQlIsaUJBQWlCQSxjQUFjUyxNQUFNLEdBQUc7SUFFakUscUJBQ0UsNkJBQUNDLGNBQUssQ0FBQ0MsUUFBUSxzQkFDYiw2QkFBQ0M7UUFDQ0MsV0FBVztZQUNUekI7WUFDQW9CLG1CQUFtQixDQUFDLEVBQUVwQixVQUFVLGFBQWEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsVUFBVSxZQUFZLENBQUM7WUFDM0VPLG9CQUFvQixDQUFDLEVBQUVQLFVBQVUsb0JBQW9CLENBQUM7U0FDdkQsQ0FDRWUsTUFBTSxDQUFDVyxTQUNQQyxJQUFJLENBQUM7cUJBRVIsNkJBQUNIO1FBQUlDLFdBQVcsQ0FBQyxFQUFFekIsVUFBVSxNQUFNLENBQUM7cUJBQ2xDLDZCQUFDNEIsY0FBTTtRQUFDSCxXQUFXLENBQUMsRUFBRXpCLFVBQVUsTUFBTSxDQUFDO3FCQUNyQyw2QkFBQzZCO1FBQU9KLFdBQVcsQ0FBQyxFQUFFekIsVUFBVSxRQUFRLENBQUM7T0FDdENJLDZCQUNDLDZCQUFDb0I7UUFBSUMsV0FBVyxDQUFDLEVBQUV6QixVQUFVLFlBQVksQ0FBQztxQkFDeEMsNkJBQUM4Qix3QkFBZTtRQUFDMUIsYUFBYUE7VUFJbkNELGdCQUFnQixvQkFDakIsNkJBQUM0QixxQkFBWTtRQUNYTixXQUFXLENBQUMsRUFBRXpCLFVBQVUsUUFBUSxDQUFDO1FBQ2pDYyxhQUFhUjtRQUNiRCxZQUFZQTtRQUNaVSxRQUFRLENBQUNDLFFBQ1AsQ0FBQ0EsTUFBTUMsS0FBSyxDQUFDQyxRQUFRLElBQ3BCRixNQUFNQyxLQUFLLENBQUNDLFFBQVEsSUFBSUYsTUFBTUMsS0FBSyxDQUFDQyxRQUFRLEtBQUs7UUFFcERULGFBQWFBLFlBQVlILE1BQU07UUFDL0JhLFVBQVUsQ0FBQ1g7UUFFWk4sZUFBZSxRQUduQmtCLGtDQUNDLDZCQUFDSTtRQUFJQyxXQUFXLENBQUMsRUFBRXpCLFVBQVUsY0FBYyxDQUFDO3FCQUMxQyw2QkFBQ3dCO1FBQUlDLFdBQVcsQ0FBQyxFQUFFekIsVUFBVSxTQUFTLENBQUM7cUJBQ3JDLDZCQUFDd0I7UUFBSUMsV0FBVyxDQUFDLEVBQUV6QixVQUFVLGdCQUFnQixDQUFDO3FCQUM1Qyw2QkFBQytCLHFCQUFZO1FBQ1gxQixZQUFZQTtRQUNaQyxRQUFRTTtRQUNSSCxhQUFhQSxZQUFZSCxNQUFNO1FBQy9CYSxVQUFVLENBQUNYOztBQVM3QiJ9