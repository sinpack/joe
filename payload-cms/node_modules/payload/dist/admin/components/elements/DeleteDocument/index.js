"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _modal = require("@faceless-ui/modal");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _reacttoastify = require("react-toastify");
const _getTranslation = require("../../../../utilities/getTranslation");
const _api = require("../../../api");
const _useTitle = /*#__PURE__*/ _interop_require_default(require("../../../hooks/useTitle"));
const _context = require("../../forms/Form/context");
const _Minimal = /*#__PURE__*/ _interop_require_default(require("../../templates/Minimal"));
const _Config = require("../../utilities/Config");
const _Button = /*#__PURE__*/ _interop_require_default(require("../Button"));
const _PopupButtonList = /*#__PURE__*/ _interop_require_wildcard(require("../Popup/PopupButtonList"));
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'delete-document';
const DeleteDocument = (props)=>{
    const { id, buttonId, collection: { labels: { singular } = {}, slug } = {}, collection, title: titleFromProps } = props;
    const { routes: { admin, api }, serverURL } = (0, _Config.useConfig)();
    const { setModified } = (0, _context.useForm)();
    const [deleting, setDeleting] = (0, _react.useState)(false);
    const { toggleModal } = (0, _modal.useModal)();
    const history = (0, _reactrouterdom.useHistory)();
    const { i18n, t } = (0, _reacti18next.useTranslation)('general');
    const title = (0, _useTitle.default)({
        collection
    });
    const titleToRender = titleFromProps || title || id;
    const modalSlug = `delete-${id}`;
    const addDefaultError = (0, _react.useCallback)(()=>{
        setDeleting(false);
        _reacttoastify.toast.error(t('error:deletingTitle', {
            title
        }));
    }, [
        t,
        title
    ]);
    const handleDelete = (0, _react.useCallback)(async ()=>{
        setDeleting(true);
        setModified(false);
        try {
            await _api.requests.delete(`${serverURL}${api}/${slug}/${id}`, {
                headers: {
                    'Accept-Language': i18n.language,
                    'Content-Type': 'application/json'
                }
            }).then(async (res)=>{
                try {
                    const json = await res.json();
                    if (res.status < 400) {
                        setDeleting(false);
                        toggleModal(modalSlug);
                        _reacttoastify.toast.success(json.message || t('titleDeleted', {
                            label: (0, _getTranslation.getTranslation)(singular, i18n),
                            title
                        }));
                        return history.push(`${admin}/collections/${slug}`);
                    }
                    toggleModal(modalSlug);
                    if (json.errors) {
                        json.errors.forEach((error)=>_reacttoastify.toast.error(error.message));
                    } else {
                        addDefaultError();
                    }
                    return false;
                } catch (e) {
                    return addDefaultError();
                }
            });
        } catch (e) {
            addDefaultError();
        }
    }, [
        setModified,
        serverURL,
        api,
        slug,
        id,
        toggleModal,
        modalSlug,
        t,
        singular,
        i18n,
        title,
        history,
        admin,
        addDefaultError
    ]);
    if (id) {
        return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_PopupButtonList.Button, {
            id: buttonId,
            onClick: ()=>{
                setDeleting(false);
                toggleModal(modalSlug);
            }
        }, t('delete')), /*#__PURE__*/ _react.default.createElement(_modal.Modal, {
            className: baseClass,
            slug: modalSlug
        }, /*#__PURE__*/ _react.default.createElement(_Minimal.default, {
            className: `${baseClass}__template`
        }, /*#__PURE__*/ _react.default.createElement("h1", null, t('confirmDeletion')), /*#__PURE__*/ _react.default.createElement("p", null, /*#__PURE__*/ _react.default.createElement(_reacti18next.Trans, {
            i18nKey: "aboutToDelete",
            t: t,
            values: {
                label: (0, _getTranslation.getTranslation)(singular, i18n),
                title: titleToRender
            }
        }, "aboutToDelete", /*#__PURE__*/ _react.default.createElement("strong", null, titleToRender))), /*#__PURE__*/ _react.default.createElement("div", {
            className: `${baseClass}__actions`
        }, /*#__PURE__*/ _react.default.createElement(_Button.default, {
            buttonStyle: "secondary",
            id: "confirm-cancel",
            onClick: deleting ? undefined : ()=>toggleModal(modalSlug),
            type: "button"
        }, t('cancel')), /*#__PURE__*/ _react.default.createElement(_Button.default, {
            id: "confirm-delete",
            onClick: deleting ? undefined : handleDelete
        }, deleting ? t('deleting') : t('confirm'))))));
    }
    return null;
};
const _default = DeleteDocument;

//# sourceMappingURL=data:application/json;base64,