"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _windowinfo = require("@faceless-ui/window-info");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _useIntersect = /*#__PURE__*/ _interop_require_default(require("../../../hooks/useIntersect"));
const _PopupTrigger = require("./PopupTrigger");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'popup';
const Popup = (props)=>{
    const { boundingRef, button, buttonClassName, buttonType = 'default', caret = true, children, className, forceOpen, horizontalAlign: horizontalAlignFromProps = 'left', initActive = false, onToggleOpen, render, showOnHover = false, showScrollbar = false, size = 'medium', verticalAlign: verticalAlignFromProps = 'top' } = props;
    const { height: windowHeight, width: windowWidth } = (0, _windowinfo.useWindowInfo)();
    const [intersectionRef, intersectionEntry] = (0, _useIntersect.default)({
        root: boundingRef?.current || null,
        rootMargin: '-100px 0px 0px 0px',
        threshold: 1
    });
    const contentRef = (0, _react.useRef)(null);
    const [active, setActive] = (0, _react.useState)(initActive);
    const [verticalAlign, setVerticalAlign] = (0, _react.useState)(verticalAlignFromProps);
    const [horizontalAlign, setHorizontalAlign] = (0, _react.useState)(horizontalAlignFromProps);
    const setPosition = (0, _react.useCallback)(({ horizontal = false, vertical = false })=>{
        if (contentRef.current) {
            const bounds = contentRef.current.getBoundingClientRect();
            const { bottom: contentBottomPos, left: contentLeftPos, right: contentRightPos, top: contentTopPos } = bounds;
            let boundingTopPos = 100;
            let boundingRightPos = document.documentElement.clientWidth;
            let boundingBottomPos = document.documentElement.clientHeight;
            let boundingLeftPos = 0;
            if (boundingRef?.current) {
                ({ bottom: boundingBottomPos, left: boundingLeftPos, right: boundingRightPos, top: boundingTopPos } = boundingRef.current.getBoundingClientRect());
            }
            if (horizontal) {
                if (contentRightPos > boundingRightPos && contentLeftPos > boundingLeftPos) {
                    setHorizontalAlign('right');
                } else if (contentLeftPos < boundingLeftPos && contentRightPos < boundingRightPos) {
                    setHorizontalAlign('left');
                }
            }
            if (vertical) {
                if (contentTopPos < boundingTopPos && contentBottomPos < boundingBottomPos) {
                    setVerticalAlign('bottom');
                } else if (contentBottomPos > boundingBottomPos && contentTopPos > boundingTopPos) {
                    setVerticalAlign('top');
                }
            }
        }
    }, [
        boundingRef
    ]);
    const handleClickOutside = (0, _react.useCallback)((e)=>{
        if (contentRef.current.contains(e.target)) {
            return;
        }
        setActive(false);
    }, [
        contentRef
    ]);
    (0, _react.useEffect)(()=>{
        setPosition({
            horizontal: true
        });
    }, [
        intersectionEntry,
        setPosition,
        windowWidth
    ]);
    (0, _react.useEffect)(()=>{
        setPosition({
            vertical: true
        });
    }, [
        intersectionEntry,
        setPosition,
        windowHeight
    ]);
    (0, _react.useEffect)(()=>{
        if (typeof onToggleOpen === 'function') onToggleOpen(active);
        if (active) {
            document.addEventListener('mousedown', handleClickOutside);
        } else {
            document.removeEventListener('mousedown', handleClickOutside);
        }
        return ()=>{
            document.removeEventListener('mousedown', handleClickOutside);
        };
    }, [
        active,
        handleClickOutside,
        onToggleOpen
    ]);
    (0, _react.useEffect)(()=>{
        setActive(forceOpen);
    }, [
        forceOpen
    ]);
    const classes = [
        baseClass,
        className,
        `${baseClass}--size-${size}`,
        `${baseClass}--v-align-${verticalAlign}`,
        `${baseClass}--h-align-${horizontalAlign}`,
        active && `${baseClass}--active`,
        showScrollbar && `${baseClass}--show-scrollbar`
    ].filter(Boolean).join(' ');
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: classes
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__trigger-wrap`
    }, showOnHover ? /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__on-hover-watch`,
        onMouseEnter: ()=>setActive(true),
        onMouseLeave: ()=>setActive(false)
    }, /*#__PURE__*/ _react.default.createElement(_PopupTrigger.PopupTrigger, {
        active,
        button,
        buttonType,
        className: buttonClassName,
        setActive
    })) : /*#__PURE__*/ _react.default.createElement(_PopupTrigger.PopupTrigger, {
        active,
        button,
        buttonType,
        className: buttonClassName,
        setActive
    })), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__content`,
        ref: contentRef
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__hide-scrollbar`,
        ref: intersectionRef
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__scroll-container`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__scroll-content`
    }, render && render({
        close: ()=>setActive(false)
    }), children && children))), caret && /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__caret`
    })));
};
const _default = Popup;

//# sourceMappingURL=data:application/json;base64,